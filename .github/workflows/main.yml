name: Serverless Deployement

on:
  push:
    branches:
      - main
  
jobs:
  changes:
      name: Changes
      runs-on: ubuntu-latest
      outputs:
        folders: ${{ steps.filter.outputs.folders }}
      steps:
        - uses: actions/checkout@v2
        - name: Check changed files
          id: diff
          run: |
            if [ $GITHUB_BASE_REF ]; then
              # Pull Request
              git fetch origin $GITHUB_BASE_REF --depth=1
              export DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
              echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
            else
              # Push
              git fetch origin ${{ github.event.before }} --depth=1
              export DIFF=$( git diff --diff-filter=d --name-only ${{ github.event.before }} $GITHUB_SHA )
              echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
            fi
            echo "$DIFF"
            # Escape newlines (replace \n with %0A)
            echo "::set-output name=diff::$( echo "$DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"
        - name: Set matrix for build
          id: filter
          run: |
            DIFF="${{ steps.diff.outputs.diff }}"

            if [ -z "$DIFF" ]; then
              echo "::set-output name=folders::[]"
            else
              JSON="["
              # Loop by lines
              while read path; do
                # Set $directory to substring before /
                parent="$( echo $path | cut -d'/' -f1 -s )"
                directory="$( echo $path | cut -d'/' -f 1,2 -s )"
              echo $parent
              echo $directory
              # ignore .github folder
              if [[ "$parent" != ".github" ]]; then
                # Add build to the matrix only if it is not already included
                JSONline="\"$directory\","
                if [[ "$JSON" != *"$JSONline"* ]]; then
                  JSON="$JSON$JSONline"
                fi
              fi
              done <<< "$DIFF"

              # Remove last "," and add closing brackets
              if [[ $JSON == *, ]]; then
                JSON="${JSON%?}"
              fi
              JSON="$JSON]"
              echo $JSON

              # Set output
              echo "::set-output name=folders::$( echo "$JSON" )"
            fi
          
  deploy:
    needs: changes
    name: deploy
    runs-on: ubuntu-latest
    
    strategy:
        matrix:
          folder: ${{ fromJSON(needs.changes.outputs.folders) }} 
    
    steps:
    - uses: actions/checkout@v3
      with:
            fetch-depth: 100
    
    - name: Cache Primes
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
            ${{ runner.os }}-node-
        
    - name: Set dependencies
      if: steps.cache-primes.outputs.cache-hit != 'true'
      uses: actions/setup-node@v3.2.0
      with:
        node-version: 16.x

    - name: install npm dependencies
      run: npm ci 
      
    - name: Install Serverless Framework
      run: npm install -g serverless
      
    - name: Serverless Authentication
      run: sls config credentials --provider aws --key ${{secrets.AWS_ACCESS_KEY_ID}} --secret ${{secrets.AWS_SECRET_ACCESS_KEY}}
    
    - name: print things
      run: echo ${{ matrix.folder }}
      
    - name: Deploy to AWS
      run: serverless deploy --verbose
      working-directory: ${{ matrix.folder }}
      env:
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        AWS_MFA_KEY: ${{ secrets.AWS_MFA_KEY }}
        AWS_MFA_SERIAL_NUMBER: ${{ secrets.AWS_MFA_SERIAL_NUMBER }}
        AWS_IAM_ROLE: ${{ secrets.AWS_IAM_ROLE }}
